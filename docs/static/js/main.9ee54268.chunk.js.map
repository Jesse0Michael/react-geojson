{"version":3,"sources":["components/Dropzone/index.jsx","components/Map/index.jsx","index.js"],"names":["DropZone","onLoad","onError","useState","drag","state","setState","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","json","JSON","parse","result","readAsText","onDrag","useDropzone","noClick","getRootProps","getInputProps","className","onDragOver","e","onDragEnter","onDragLeave","style","pointerEvents","display","mapboxgl","accessToken","Map","map","lng","lat","useEffect","container","center","zoom","on","getCenter","toFixed","alert","useAlert","id","data","uuid","addSource","type","addLayer","source","layout","paint","err","error","d","document","getElementById","classList","add","setTimeout","remove","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","FADE","Root","template","AlertTemplate","ReactDOM","render"],"mappings":"sWA2DeA,MAvDf,YAAwC,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAAW,EACZC,mBAAS,CAClCC,MAAM,IAF+B,mBAC/BC,EAD+B,KACxBC,EADwB,KAKhCC,EAASC,uBACd,SAACC,GACAH,EAAS,CAAEF,MAAM,IACjBK,EAAcC,SAAQ,SAACC,GACtB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMZ,EAAQ,6BAC/BU,EAAOG,QAAU,kBAAMb,EAAQ,4BAC/BU,EAAOI,OAAS,WACf,IAAIC,EACJ,IACCA,EAAOC,KAAKC,MAAMP,EAAOQ,QACxB,SAED,YADAlB,EAAQ,kCAGTD,EAAOgB,IAERL,EAAOS,WAAWV,QAGpB,CAACV,EAAQC,IAGJoB,EAAS,WACdhB,EAAS,CAAEF,MAAM,KA9BoB,EAoCEmB,YAAY,CACnDhB,SACAiB,SAAS,IAFFC,EApC8B,EAoC9BA,aAAcC,EApCgB,EAoChBA,cAKtB,OACC,uCACCC,UAAWtB,EAAMD,KAAO,yBAA2B,YAC/CqB,IAFL,CAGCG,WAAY,SAACC,GAAD,OAAOP,KACnBQ,YAAa,SAACD,GAAD,OAAOP,KACpBS,YAAa,SAACF,GAdfvB,EAAS,CAAEF,MAAM,OAgBhB,uBAAG4B,MAAO,CAAEC,cAAe,SAA3B,sDACA,yCAAON,UAAU,UAAaD,IAA9B,CAA+CM,MAAO,CAAEE,QAAS,cC9CpEC,IAASC,YAAc,oGAEvB,IAoEeC,EApEH,WAAO,IAAD,EACSlC,mBAAS,CAClCmC,IAAK,KACLC,KAAM,IACNC,IAAK,OAJW,mBACVnC,EADU,KACHC,EADG,KAOjBmC,qBAAU,WACT,IAAIH,EAAM,IAAIH,IAASE,IAAI,CAC1BK,UAAW,MACXV,MAAO,qCACPW,OAAQ,EAAE,IAAO,MACjBC,KAAM,IAEPN,EAAIO,GAAG,QAAQ,WACdvC,EAAS,CACRiC,IAAKD,EAAIQ,YAAYP,IAAIQ,QAAQ,GACjCP,IAAKF,EAAIQ,YAAYN,IAAIO,QAAQ,QAGnCzC,EAAS,CACRgC,IAAKA,EACLC,IAAKD,EAAIQ,YAAYP,IAAIQ,QAAQ,GACjCP,IAAKF,EAAIQ,YAAYN,IAAIO,QAAQ,OAEhC,IAEH,IAkBMC,EAAQC,cAUd,OACC,6BACC,yBAAKtB,UAAU,WACd,2CACatB,EAAMkC,IADnB,cACmClC,EAAMmC,IAAK,MAG/C,yBAAKU,GAAG,MAAMvB,UAAU,iBACxB,kBAAC,EAAD,CAAU1B,OApCO,SAACkD,GACnB,IAAMD,EAAKE,cACX/C,EAAMiC,IAAIe,UAAUH,EAAI,CACvBI,KAAM,UACNH,SAED9C,EAAMiC,IAAIiB,SAAS,CAClBL,KACAI,KAAM,OACNE,OAAQN,EACRO,OAAQ,GACRC,MAAO,CACN,aAAc,OACd,eAAgB,OAuBaxD,QAjBf,SAACyD,GACjBX,EAAMY,MAAMD,GACZ,IAAIE,EAAIC,SAASC,eAAe,OAChCF,EAAEG,UAAUC,IAAI,SAChBC,YAAW,WACVL,EAAEG,UAAUG,OAAO,WACjB,UCvDCC,EAAU,CACfC,SAAUC,IAAUC,cACpBC,QAAS,IACTC,OAAQ,OACRC,WAAYC,IAAYC,MAGnBC,EAAO,kBACZ,kBAAC,IAAD,eAAeC,SAAUC,KAAmBX,GAC3C,kBAAC,EAAD,QAIFY,IAASC,OAAO,kBAAC,EAAD,MAAUnB,SAASC,eAAe,W","file":"static/js/main.9ee54268.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./dropzone.css\";\n\nfunction DropZone({ onLoad, onError }) {\n\tconst [state, setState] = useState({\n\t\tdrag: false,\n\t});\n\n\tconst onDrop = useCallback(\n\t\t(acceptedFiles) => {\n\t\t\tsetState({ drag: false });\n\t\t\tacceptedFiles.forEach((file) => {\n\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\treader.onabort = () => onError(\"file reading was aborted\");\n\t\t\t\treader.onerror = () => onError(\"file reading has failed\");\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tvar json;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tjson = JSON.parse(reader.result);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tonError(\"cannot parse geoJSON from file\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonLoad(json);\n\t\t\t\t};\n\t\t\t\treader.readAsText(file);\n\t\t\t});\n\t\t},\n\t\t[onLoad, onError]\n\t);\n\n\tconst onDrag = () => {\n\t\tsetState({ drag: true });\n\t};\n\tconst onLeave = () => {\n\t\tsetState({ drag: false });\n\t};\n\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\tonDrop,\n\t\tnoClick: true,\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={state.drag ? \"dropzone dropzone-drag\" : \"dropzone\"}\n\t\t\t{...getRootProps()}\n\t\t\tonDragOver={(e) => onDrag(e)}\n\t\t\tonDragEnter={(e) => onDrag(e)}\n\t\t\tonDragLeave={(e) => onLeave(e)}\n\t\t>\n\t\t\t<p style={{ pointerEvents: \"none\" }}>Drag geo JSON files here, or click to select files</p>\n\t\t\t<input className=\"button\" {...getInputProps()} style={{ display: \"block\" }} />\n\t\t</div>\n\t);\n}\n\nexport default DropZone;\n","import React, { useState, useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { v4 as uuid } from \"uuid\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./map.css\";\nimport \"./shake.css\";\nimport DropZone from \"../../components/Dropzone\";\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiamVzc2UwbWljaGFlbCIsImEiOiJjazk5NDR0MDAweDB3M2Z0YW9ia2x4cjgxIn0._3heS1yvmszc0MIOphnH5g\";\n\nconst Map = () => {\n\tconst [state, setState] = useState({\n\t\tmap: null,\n\t\tlng: -112.0,\n\t\tlat: 33.5,\n\t});\n\n\tuseEffect(() => {\n\t\tvar map = new mapboxgl.Map({\n\t\t\tcontainer: \"map\", // container id\n\t\t\tstyle: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n\t\t\tcenter: [-112.0, 33.5], // starting position [lng, lat]\n\t\t\tzoom: 9, // starting zoom\n\t\t});\n\t\tmap.on(\"move\", () => {\n\t\t\tsetState({\n\t\t\t\tlng: map.getCenter().lng.toFixed(4),\n\t\t\t\tlat: map.getCenter().lat.toFixed(4),\n\t\t\t});\n\t\t});\n\t\tsetState({\n\t\t\tmap: map,\n\t\t\tlng: map.getCenter().lng.toFixed(4),\n\t\t\tlat: map.getCenter().lat.toFixed(4),\n\t\t});\n\t}, []);\n\n\tconst setGeoJSON = (data) => {\n\t\tconst id = uuid();\n\t\tstate.map.addSource(id, {\n\t\t\ttype: \"geojson\",\n\t\t\tdata,\n\t\t});\n\t\tstate.map.addLayer({\n\t\t\tid,\n\t\t\ttype: \"fill\",\n\t\t\tsource: id,\n\t\t\tlayout: {},\n\t\t\tpaint: {\n\t\t\t\t\"fill-color\": \"#088\",\n\t\t\t\t\"fill-opacity\": 0.8,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst alert = useAlert();\n\tconst setError = (err) => {\n\t\talert.error(err);\n\t\tvar d = document.getElementById(\"map\");\n\t\td.classList.add(\"shake\");\n\t\tsetTimeout(() => {\n\t\t\td.classList.remove(\"shake\");\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<div>\n\t\t\t\t\tLongitude: {state.lng} Latitude: {state.lat}{\" \"}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"map\" className=\"mapContainer\"></div>\n\t\t\t<DropZone onLoad={setGeoJSON} onError={setError} />\n\t\t</div>\n\t);\n};\n\nexport default Map;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./index.css\";\nimport Map from \"./components/Map\";\n\nconst options = {\n\tposition: positions.BOTTOM_CENTER,\n\ttimeout: 5000,\n\toffset: \"30px\",\n\ttransition: transitions.FADE,\n};\n\nconst Root = () => (\n\t<AlertProvider template={AlertTemplate} {...options}>\n\t\t<Map />\n\t</AlertProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}