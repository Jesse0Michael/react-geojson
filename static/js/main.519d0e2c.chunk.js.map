{"version":3,"sources":["components/Dropzone/index.jsx","components/Map/index.jsx","index.js"],"names":["DropZone","onLoad","onError","useState","drag","state","setState","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","onerror","onload","json","JSON","parse","result","readAsText","onDrag","useDropzone","noClick","getRootProps","getInputProps","className","onDragOver","e","onDragEnter","onDragLeave","style","pointerEvents","display","mapboxgl","accessToken","tryParseTrip","data","entities","map","x","entityID","entityType","type","properties","id","bounds","distance","duration","violations","geometry","coordinates","path","lng","lat","Map","useEffect","container","center","zoom","on","getCenter","toFixed","alert","useAlert","setError","err","error","d","document","getElementById","classList","add","setTimeout","remove","c","trip","console","log","Array","isArray","features","tryParseTrips","uuid","addSource","addLayer","source","layout","paint","popup","Popup","closeButton","closeOnClick","maxWidth","getCanvas","cursor","description","output","Object","entries","key","value","Math","abs","lngLat","setLngLat","setHTML","addTo","flyTo","essential","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","FADE","Root","template","AlertTemplate","ReactDOM","render"],"mappings":"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","file":"static/js/main.519d0e2c.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./dropzone.css\";\n\nfunction DropZone({ onLoad, onError }) {\n\tconst [state, setState] = useState({\n\t\tdrag: false,\n\t});\n\n\tconst onDrop = useCallback(\n\t\t(acceptedFiles) => {\n\t\t\tsetState({ drag: false });\n\t\t\tacceptedFiles.forEach((file) => {\n\t\t\t\tconst reader = new FileReader();\n\n\t\t\t\treader.onabort = () => onError(\"file reading was aborted\");\n\t\t\t\treader.onerror = () => onError(\"file reading has failed\");\n\t\t\t\treader.onload = () => {\n\t\t\t\t\tvar json;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tjson = JSON.parse(reader.result);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\tonError(\"cannot parse geoJSON from file\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonLoad(json);\n\t\t\t\t};\n\t\t\t\treader.readAsText(file);\n\t\t\t});\n\t\t},\n\t\t[onLoad, onError]\n\t);\n\n\tconst onDrag = () => {\n\t\tsetState({ drag: true });\n\t};\n\tconst onLeave = () => {\n\t\tsetState({ drag: false });\n\t};\n\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\tonDrop,\n\t\tnoClick: true,\n\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName={state.drag ? \"dropzone dropzone-drag\" : \"dropzone\"}\n\t\t\t{...getRootProps()}\n\t\t\tonDragOver={(e) => onDrag(e)}\n\t\t\tonDragEnter={(e) => onDrag(e)}\n\t\t\tonDragLeave={(e) => onLeave(e)}\n\t\t>\n\t\t\t<p style={{ pointerEvents: \"none\" }}>Drag geo JSON files here, or click to select files</p>\n\t\t\t<input className=\"button\" {...getInputProps()} style={{ display: \"block\" }} />\n\t\t</div>\n\t);\n}\n\nexport default DropZone;\n","import React, { useState, useEffect } from \"react\";\nimport { useAlert } from \"react-alert\";\nimport { v4 as uuid } from \"uuid\";\nimport mapboxgl from \"mapbox-gl\";\nimport { center } from \"@turf/turf\";\nimport \"./map.css\";\nimport \"./shake.css\";\nimport DropZone from \"../../components/Dropzone\";\n\nmapboxgl.accessToken = \"pk.eyJ1IjoiamVzc2UwbWljaGFlbCIsImEiOiJjazk5NDR0MDAweDB3M2Z0YW9ia2x4cjgxIn0._3heS1yvmszc0MIOphnH5g\";\n\nconst Map = () => {\n\tconst [state, setState] = useState({\n\t\tmap: null,\n\t\tlng: -112.0,\n\t\tlat: 33.5,\n\t});\n\n\tuseEffect(() => {\n\t\tvar map = new mapboxgl.Map({\n\t\t\tcontainer: \"map\", // container id\n\t\t\tstyle: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n\t\t\tcenter: [-112.0, 33.5], // starting position [lng, lat]\n\t\t\tzoom: 9, // starting zoom\n\t\t});\n\t\tmap.on(\"move\", () => {\n\t\t\tsetState({\n\t\t\t\tmap: map,\n\t\t\t\tlng: map.getCenter().lng.toFixed(4),\n\t\t\t\tlat: map.getCenter().lat.toFixed(4),\n\t\t\t});\n\t\t});\n\t\tsetState({\n\t\t\tmap: map,\n\t\t\tlng: map.getCenter().lng.toFixed(4),\n\t\t\tlat: map.getCenter().lat.toFixed(4),\n\t\t});\n\t}, []);\n\n\tconst setGeoJSON = (data) => {\n\t\tvar c;\n\t\ttry {\n\t\t\tc = center(data)\n\t\t} catch {\n\t\t\tvar trip = tryParseTrips(data)\n\t\t\ttry {\n\t\t\t\tc = center(trip)\n\t\t\t\tdata = trip\n\t\t\t} catch {\n\t\t\t\tsetError(\"JSON is not valid geometry\");\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tconst id = uuid();\n\t\tstate.map.addSource(id, {\n\t\t\ttype: \"geojson\",\n\t\t\tdata: data,\n\t\t});\n\t\tstate.map.addLayer({\n\t\t\tid,\n\t\t\ttype: \"line\",\n\t\t\tsource: id,\n\t\t\tlayout: {},\n\t\t\tpaint: {\n\t\t\t\t\"line-color\": \"#088\",\n\t\t\t\t\"line-opacity\": 0.8,\n\t\t\t\t\"line-width\": 3,\n\t\t\t},\n\t\t});\n\t\tvar popup = new mapboxgl.Popup({\n\t\t\tcloseButton: false,\n\t\t\tcloseOnClick: false,\n\t\t\tmaxWidth: '480px'\n\t\t});\n\t\tstate.map.on('mouseenter', id, function (e) {\n\t\t\t// Change the cursor style as a UI indicator.\n\t\t\tstate.map.getCanvas().style.cursor = 'pointer';\n\n\t\t\tvar coordinates = center(e.features[0]).geometry.coordinates;\n\t\t\tvar description = e.features[0].properties;\n\t\t\tvar output = '';\n\t\t\tfor (let [key, value] of Object.entries(description)) {\n\t\t\t\toutput += `${key}: ${value}<br />`;\n\t\t\t}\n\n\t\t\t// Ensure that if the map is zoomed out such that multiple\n\t\t\t// copies of the feature are visible, the popup appears\n\t\t\t// over the copy being pointed to.\n\t\t\twhile (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n\t\t\t\tcoordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n\t\t\t}\n\n\t\t\tpopup.setLngLat(coordinates)\n\t\t\t\t.setHTML(output)\n\t\t\t\t.addTo(state.map);\n\t\t});\n\n\t\tstate.map.on('mouseleave', id, function () {\n\t\t\tstate.map.getCanvas().style.cursor = '';\n\t\t\tpopup.remove();\n\t\t});\n\t\tstate.map.flyTo({\n\t\t\tcenter: c.geometry.coordinates,\n\t\t\tzoom: 11,\n\t\t\tessential: true\n\t\t});\n\t};\n\n\tconst alert = useAlert();\n\tconst setError = (err) => {\n\t\talert.error(err);\n\t\tvar d = document.getElementById(\"map\");\n\t\td.classList.add(\"shake\");\n\t\tsetTimeout(() => {\n\t\t\td.classList.remove(\"shake\");\n\t\t}, 1000);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<div>\n\t\t\t\t\tLongitude: {state.lng} Latitude: {state.lat}{\" \"}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"map\" className=\"mapContainer\"></div>\n\t\t\t<DropZone onLoad={setGeoJSON} onError={setError} />\n\t\t</div>\n\t);\n};\n\nfunction tryParseTrips(data) {\n\tconsole.log(data)\n\tif (Array.isArray(data.data)) {\n\t\tvar features = data.data.map(d => tryParseTrip(d))\n\t\tconsole.log(features)\n\t\treturn { type: \"FeatureCollection\", features: features }\n\t} else {\n\t\treturn tryParseTrip(data)\n\t}\n}\n\nfunction tryParseTrip(data) {\n\tvar entities = data.entities.map(x => ({ entityID: x.entityID, entityType: x.type }))\n\tvar properties = { id: data.id, entities, bounds: data.bounds, distance: data.distance, duration: data.duration, violations: data.violations }\n\tvar coordinates = data.path.map(x => ([x.lng, x.lat]))\n\tvar geometry = { type: \"LineString\", coordinates }\n\treturn { type: \"Feature\", properties, geometry }\n}\n\nexport default Map;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./index.css\";\nimport Map from \"./components/Map\";\n\nconst options = {\n\tposition: positions.BOTTOM_CENTER,\n\ttimeout: 5000,\n\toffset: \"30px\",\n\ttransition: transitions.FADE,\n};\n\nconst Root = () => (\n\t<AlertProvider template={AlertTemplate} {...options}>\n\t\t<Map />\n\t</AlertProvider>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}